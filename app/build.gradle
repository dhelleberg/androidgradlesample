apply plugin: 'android'

def buildTime = new Date().format("yyyy-MM-dd'|'HH:mm", TimeZone.getTimeZone("UTC"))
def hostName = java.net.InetAddress.getLocalHost().getHostName()


android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0"

    defaultConfig {
        minSdkVersion 7
        targetSdkVersion 19
        versionCode readVersion()
        versionName "1.0"
        buildConfigField "String", "BUILD_TIME", "\"$buildTime\""
        buildConfigField "String", "BUILD_HOST", "\"$hostName\""
    }

    signingConfigs {
        release {
            storeFile file("../my-release-key.keystore")
            storePassword "hellonsa"
            keyAlias "release"
            keyPassword "hellonsa"
        }
    }

    buildTypes {
        debug {
            packageNameSuffix ".debug"
            buildConfigField "String", "API_HOST", "\"http://dev.myservice.com\""
        }
        UAT.initWith(buildTypes.debug)
        UAT {
            buildConfigField "String", "API_HOST", "\"https://uat.myservice.com\""
        }
        release {
            buildConfigField "String", "API_HOST", "\"https://api.myservice.com\""
            signingConfig signingConfigs.release
            minifyEnabled false
        }
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:20.0.+'
    compile fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
}


int readVersion() {
    logger.quiet 'Reading the version file.'

    File versionFile =  new File(project.projectDir.getPath()+"/version.properties")

    if(!versionFile.exists()) {
        throw new GradleException("Required version file does not exist: $versionFile.canonicalPath")
    }

    Properties versionProps = new Properties()
    versionFile.withInputStream {
        stream ->  versionProps.load(stream)
    }
    //for the java guys:
    //versionProps.load(new FileInputStream(file("version.properties")))

    versionProps.versionCode.toInteger()
}
